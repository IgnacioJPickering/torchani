scan_search:
    atomic_network:
        dims_shared:  [[192, 96], [192, 96, 96], [192, 96, 52],[192, 96, 96] ]
        dims_specific: [[52, 52], [52, 52], [52, 52], [96, 96, 96, 96]]
# parameters associated with dataset 
datasets:
    dataset_path: '/home/ignacio/Datasets/nacho_cep_tddft.pkl'
    batch_size: 1024
    split_percentage: 0.9
    nonstandard_keys : 
        species: 'species'
        coordinates: 'coordinates'
        energies: 'scf_energy'
        energies_ex: 'energies_ex'

# general parameters
general:
    early_stopping_lr: 1.0e-10
    max_epochs: 100
    use_tqdm: True
    loop: 'excited_state_loop'
    
validation_function: 'validate_energies_ex'
init:
    function: 'init_sharp_gaussian'

loss:
    class: 'MultiTaskUncertaintyLoss'
    num_inputs: 11

optimizer_loss:
    lr: 1.0e-8
    weight_decay: 0.0

optimizer:
    class: 'AdamW'
    lr: 0.0001  # this seems fine based on hparam search of lr's
    betas: [0.9, 0.999]
    weight_decay: 1.0e-7
    amsgrad: False
    eps: 1.0e-8

lr_scheduler:
    class: 'ReduceLROnPlateau'
    patience: 75
    threshold: 5.e-4
    factor: 0.5



# These hyperparameters are used for constructing the different parts of the
# TemplateModel, the class needs to be specified, along with a list of all the
# hyperparameters for that class

# no custom class is supported for this at the moment
species_converter:
    species: ['H', 'C', 'N', 'O']

# AEVComputerJoint Hyperparameters
# Note that the classmethod "cover_linearly" is called for this class, 
# for all other classes the normal constructor is called
aev_computer:
    class: 'AEVComputerJoint'  
    radial_cutoff: 5.2000e+00
    angular_cutoff: 3.5000e+00
    radial_eta: 16.0
    angular_eta: 8.0
    radial_dist_divisions: 16
    angular_dist_divisions: 4
    zeta: 32.0
    angle_sections: 8
    num_species: 4
    radial_start: 0.9000e+00
    angular_start: 0.9000e+00

# ANIModel Hyperparameters
ani_model:
    class: 'ANIModelMultiple'
    squeeze_last: False
    num_outputs: 11

# AtomicNetwork Hyperparameters
atomic_network:
    class: 'AtomicNetworkSpecFlexMultiple'
    dim_in: 384
    dims_shared:  [192, 96]
    dims_specific: [96, 96]
    num_outputs: 11

# no custom class is supported for this at the moment
energy_shifter:
    num_species: 4
    num_outputs: 11
